{"version":3,"sources":["secrets.js","Firebase.js","Home.js","Welcome.js","Navigation.js","FormError.js","Login.js","Register.js","PlaylistsList.js","Playlists.js","CheckIn.js","URLsList.js","URLs.js","App.js","serviceWorker.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","auth","GoogleAuthProvider","Home","user","this","props","react_default","a","createElement","className","style","fontSize","fontWeight","href","es","to","Component","Welcome","_this$props","userName","logOutUser","onClick","e","Navigation","md","FormError","theMessage","Login","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","email","password","errorMessage","handleChange","bind","assertThisInitialized","handleSubmit","itemName","target","name","itemValue","value","setState","defineProperty","_this2","registrationInfo","preventDefault","signInWithEmailAndPassword","then","navigate","catch","error","message","onSubmit","src_FormError","htmlFor","required","type","id","placeholder","onChange","Register","displayName","passOne","passTwo","_this3","createUserWithEmailAndPassword","registerUser","PlaylistsList","deletePlaylist","whichPlaylist","database","ref","concat","userID","remove","deleteMetting","myPlaylists","playlists","map","item","key","playlistID","playlistName","role","title","fa","go","Playlists","addPlaylist","aria-describedby","length","src_PlaylistsList","CheckIn","push","URLName","URLEmail","star","URLsList","deleteURL","whichURL","adminUser","toggleStar","undefined","set","admin","myURLs","URLs","URLID","searchQuery","allURLs","displayURLs","resetQuery","chooseRandom","on","snapshot","val","randomURLIndex","Math","floor","random","filteredURLs","filter","toLowerCase","match","src_URLsList","App","onAuthStateChanged","FBUser","updateProfile","uid","signOut","playlistsList","howManyPlaylists","src_Navigation","src_Welcome","src_Home","path","src_Login","src_Playlists","src_URLs","src_CheckIn","src_Register","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c70b08a.chunk.js","sourcesContent":["var config_secret = {\n    apiKey: \"AIzaSyAw-uZmAJOz-awRxcpt9QNrQi99Y2WHHwQ\",\n    authDomain: \"react-spas-tvj.firebaseapp.com\",\n    databaseURL: \"https://react-spas-tvj.firebaseio.com\",\n    projectId: \"react-spas-tvj\",\n    storageBucket: \"react-spas-tvj.appspot.com\",\n    messagingSenderId: \"1029688541435\"\n  };\n\n\nexport const config = config_secret;\n\nexport default config;","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\n// import config from './secrets.example';\nimport config from './secrets';\n\nfirebase.initializeApp(config);\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\n\nexport default firebase;\n","import React, { Component } from 'react';\nimport {Link} from '@reach/router';\n\nclass Home extends Component {\n  render() {\n    const { user } = this.props;\n\n    const biggerLead = {\n      fontSize: 1.4 + 'em',\n      fontWeight: 200\n    };\n\n    return (\n      <div className=\"container text-center\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-10 col-md-10 col-lg-8 col-xl-7\">\n            <div\n              className=\"display-4 text-primary mt-3 mb-2\"\n              style={{\n                fontSize: 2.8 + 'em'\n              }}\n            >\n              Playlist Manager\n            </div>\n            <p className=\"lead\" style={biggerLead}>\n              This simple app creates playlists, allows people to check\n              in, and picks random users to award giveaways. It's a\n              good example of a Single Page Application which includes\n              connection to a database and routing. It's a practical\n              way to learn <a href=\"https://reactjs.org/\">React</a>{' '}\n              with <a href=\"https://firebase.google.com\">Firebase</a>.\n            </p>\n\n            {user == null && (\n              <span>\n               <Link\n                  to=\"/register\"\n                  className=\"btn btn-outline-primary mr-2\"\n                >\n                  Register\n                </Link>\n               <Link\n                  to=\"/login\"\n                  className=\"btn btn-outline-primary mr-2\"\n                >\n                  Log In\n                </Link>\n              </span>\n            )}\n            {user && (\n             <Link to=\"/playlists\" className=\"btn btn-primary\">\n                Playlists\n              </Link>\n            )}\n          </div>{' '}\n          {/* columns */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport {Link} from '@reach/router';\nclass Welcome extends Component {\n  render() {\n    const { userName, logOutUser } = this.props;\n\n    return (\n      <div className=\"text-center mt-4\">\n        <span className=\"text-secondary font-weight-bold pl-1\">\n          Welcome {userName}\n        </span>\n        ,\n        <Link to=\"/login\" className=\"font-weight-bold text-primary pl-1\"\n          onClick={e => logOutUser(e)}\n        >\n          log out\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Welcome;\n","import React, { Component } from 'react';\nimport { MdFeaturedPlayList } from 'react-icons/md';\nimport {Link} from '@reach/router';\n\nclass Navigation extends Component {\n  render() {\n    const { user, logOutUser } = this.props;\n\n    return (\n      <nav className=\"site-nav family-sans navbar navbar-expand bg-primary navbar-dark higher\">\n        <div className=\"container-fluid\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            <MdFeaturedPlayList className=\"mr-1\" /> Playlist Manager\n          </Link>\n          <div className=\"navbar-nav ml-auto\">\n            {user && (\n              <Link className=\"nav-item nav-link\" to=\"/playlists\">\n                playlists\n              </Link>\n            )}\n            {!user && (\n              <Link className=\"nav-item nav-link\" to=\"/login\">\n                log in\n              </Link>\n            )}\n            {!user && (\n              <Link className=\"nav-item nav-link\" to=\"/register\">\n                register\n              </Link>\n            )}\n            {user && (\n              <Link className=\"nav-item nav-link\" to=\"/login\"\n                onClick={e => logOutUser(e)}\n              >\n                log out\n              </Link>\n            )}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, {Component} from 'react';\n\nclass FormError extends Component {\n    render(){\n        const { theMessage } = this.props;\n\n        return (\n          <div className=\"col-12 alert alert-danger px-3\">\n            {theMessage}\n          </div>\n        );\n    }\n}\n\nexport default FormError;","import React, {Component} from 'react';\nimport firebase from './Firebase';\nimport FormError from './FormError';\nimport {navigate} from '@reach/router';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          email: '',\n          password: '',\n          errorMessage: null\n        };\n    \n        //bind constructor this to method this\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n      handleChange(e) {\n        const itemName = e.target.name;\n        const itemValue = e.target.value;\n    \n        this.setState({ [itemName]: itemValue });\n      }\n\n      handleSubmit(e){\n        var registrationInfo = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        e.preventDefault();\n        firebase.auth().signInWithEmailAndPassword(\n            registrationInfo.email, \n            registrationInfo.password\n            ).then(()=>{\n                navigate('/playlists');\n            }).catch((error) => {\n                    if(error.message){\n                        this.setState({errorMessage: error.message});\n                    } else {\n                        this.setState({errorMessage: null});\n                    }\n                }   \n            );\n      }\n\n    render(){\n        return (\n          <form className=\"mt-3\" onSubmit={this.handleSubmit}>\n          <div className=\"container\">\n            <div className=\"row justify-content-center\">\n              <div className=\"col-lg-6\">\n                <div className=\"card bg-light\">\n                  <div className=\"card-body\">\n                    <h3 className=\"font-weight-light mb-3\">Log in</h3>\n                    <section className=\"form-group\">\n                            {this.state.errorMessage !== null ?\n                            <FormError \n                                theMessage={this.state.errorMessage}\n                            /> : null}\n\n                      <label\n                        className=\"form-control-label sr-only\"\n                        htmlFor=\"Email\">\n                        Email\n                      </label>\n                      <input\n                        required\n                        className=\"form-control\"\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"Email\"\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                      />\n                    </section>\n                    <section className=\"form-group\">\n                      <input\n                        required\n                        className=\"form-control\"\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                      />\n                    </section>\n                    <div className=\"form-group text-right mb-0\">\n                      <button className=\"btn btn-primary\" type=\"submit\">\n                        Log in\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n            );\n    }\n}\n\nexport default Login;","import React, {Component} from 'react';\nimport FormError from './FormError';\nimport firebase from './Firebase';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          displayName: '',\n          email: '',\n          passOne: '',\n          passTwo: '',\n          errorMessage: null\n        };\n    \n        //bind constructor this to method this\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n      handleChange(e) {\n        const itemName = e.target.name;\n        const itemValue = e.target.value;\n    \n        this.setState({ [itemName]: itemValue }, () => {\n            if(this.state.passOne !== this.state.passTwo){\n                this.setState({errorMessage: 'Make sure two password fields match'});\n            } else {\n                this.setState({errorMessage: null});\n            }\n        });\n      }\n\n      handleSubmit(e){\n        var registrationInfo = {\n            displayName: this.state.displayName,\n            email: this.state.email,\n            password: this.state.passOne\n        };\n        e.preventDefault();\n        firebase.auth().createUserWithEmailAndPassword(\n            registrationInfo.email, \n            registrationInfo.password\n            ).then(()=>{\n                this.props.registerUser(registrationInfo.displayName);\n            }).catch((error) => {\n                    if(error.message){\n                        this.setState({errorMessage: error.message});\n                    } else {\n                        this.setState({errorMessage: null});\n                    }\n                }   \n            );\n      }\n\n    render(){\n        return (\n            <form className=\"mt-3\" onSubmit={this.handleSubmit}>\n                <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-lg-8\">\n                    <div className=\"card bg-light\">\n                        <div className=\"card-body\">\n                        <h3 className=\"font-weight-light mb-3\">Register</h3>\n                        <div className=\"form-row\">\n                            {this.state.errorMessage !== null ?\n                            <FormError \n                                theMessage={this.state.errorMessage}\n                            /> : null}\n                            <section className=\"col-sm-12 form-group\">\n                            <label\n                                className=\"form-control-label sr-only\"\n                                htmlFor=\"displayName\"\n                            >\n                                    Display Name\n                                </label>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"text\"\n                                    id=\"displayName\"\n                                    placeholder=\"Display Name\"\n                                    name=\"displayName\"\n                                    required\n                                    value={this.state.displayName}\n                                    onChange={this.handleChange}\n                                />\n                            </section>\n                        </div>\n                        <section className=\"form-group\">\n                            <label\n                            className=\"form-control-label sr-only\"\n                            htmlFor=\"email\"\n                            >\n                            Email\n                            </label>\n                            <input\n                            className=\"form-control\"\n                            type=\"email\"\n                            id=\"email\"\n                            placeholder=\"Email Address\"\n                            required\n                            name=\"email\"\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                            />\n                        </section>\n                        <div className=\"form-row\">\n                            <section className=\"col-sm-6 form-group\">\n                            <input\n                                className=\"form-control\"\n                                type=\"password\"\n                                name=\"passOne\"\n                                placeholder=\"Password\"\n                                value={this.state.passOne}\n                                onChange={this.handleChange}\n                                />\n                            </section>\n                            <section className=\"col-sm-6 form-group\">\n                            <input\n                                className=\"form-control\"\n                                type=\"password\"\n                                required\n                                name=\"passTwo\"\n                                placeholder=\"Repeat Password\"\n                                value={this.state.passTwo}\n                                onChange={this.handleChange}\n                                />\n                            </section>\n                        </div>\n                        <div className=\"form-group text-right mb-0\">\n                            <button className=\"btn btn-primary\" type=\"submit\">\n                            Register\n                            </button>\n                        </div>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default Register;","import React, { Component } from 'react';\nimport { navigate } from '@reach/router';\nimport firebase from './Firebase';\nimport FormError from './FormError';\nimport { GoTrashcan, GoListUnordered } from 'react-icons/go';\nimport { FaUserCheck } from 'react-icons/fa';\n\n\nclass PlaylistsList extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n        errorMessage: null\n        }\n        this.deleteMetting = this.deletePlaylist.bind(this);\n    }\n\n    deletePlaylist = (e, whichPlaylist) => {\n        e.preventDefault();\n        // console.log(`delete btn pressed: whichPlaylist: ${whichPlaylist} userID: ${this.props.userID}`);\n        try{\n        const ref = firebase.database().ref(\n            `playlists/${this.props.userID}/${whichPlaylist}`\n        );\n        ref.remove();\n        }\n        catch(e) {\n            this.setState({errorMessage: e});\n        }\n    }\n\n  render() {\n    // console.log(`PlaylistsList render. this.props.userID: ${this.props.userID} .`);\n    const { playlists } = this.props;\n    const myPlaylists = playlists.map((item) => {\n        return(\n            <div className=\"container\" key={item.playlistID}>\n                <section className=\"row border-top clearfix pt-2 pb-2\">\n                    <div className=\"col-10 float-left text-left\">\n                        <div>{item.playlistName}</div>\n                    </div>\n                    <div className=\"col-2 float-right\">\n                        <div className=\"btn-group float-right border\" role=\"group\">\n                        <button className=\"btn btn-sm btn-outline-secondary mr-1\"\n                        title=\"Check In\"\n                        onClick={() => navigate(`/checkin/${this.props.userID}/${item.playlistID}`)}\n                        >\n                        <FaUserCheck />\n                        </button>\n                        <button className=\"btn btn-sm btn-outline-secondary mr-1\"\n                        title=\"URLs List\"\n                        onClick={() => navigate(`/URLs/${this.props.userID}/${item.playlistID}`)}\n                        >\n                        <GoListUnordered />\n                        </button>\n                        <button className=\"btn btn-sm btn-outline-secondary\"\n                        title=\"Delete Playlist\"\n                        onClick={e => this.deletePlaylist(e, item.playlistID)}\n                        >\n                        <GoTrashcan />\n                        </button>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    });\n    return (\n      <div>\n        {this.state.errorMessage !== null ?\n        <FormError \n            theMessage={this.state.errorMessage}\n        /> : null}\n\n        {myPlaylists}\n      </div>\n    );\n  }\n}\n\nexport default PlaylistsList;\n","import React, {Component} from 'react';\nimport PlaylistsList from './PlaylistsList';\n\nclass Playlists extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          playlistName: ''\n        };\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n        \n    handleChange(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n    }\n\n    handleSubmit(e){\n    e.preventDefault();\n    this.props.addPlaylist(this.state.playlistName);\n    this.setState({playlistName: ''});\n    }    \n\n    render(){\n        // console.log(`Playlists render. this.props.userID: ${this.props.userID} .`);\n        return (\n            <div className=\"container mt-4\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-8 text-center\">\n                        <h1 className=\"font-weight-light\">Add a Playlist</h1>\n                        <div className=\"card bg-light\">\n                            <div className=\"card-body text-center\">\n                                <form\n                                    className=\"formgroup\"\n                                    onSubmit={this.handleSubmit}\n                                >\n                                    <div className=\"input-group input-group-lg\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"playlistName\"\n                                            placeholder=\"Playlist name\"\n                                            aria-describedby=\"buttonAdd\"\n                                            value={this.state.playlistName}\n                                            onChange={this.handleChange}\n                                        />\n                                        <div className=\"input-group-append\">\n                                            <button\n                                            type=\"submit\"\n                                            className=\"btn btn-sm btn-info\"\n                                            id=\"buttonAdd\"\n                                            >\n                                            +\n                                            </button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n\n                    {this.props.playlists && this.props.playlists.length ?\n                    <div className=\"col-11 col-md-6 text-center\">\n                        <div className=\"card border-top-0 rounded-0\">\n                            <div className=\"card-body py-2\">\n                                <h4 className=\"card-title font-weight-light m-0\">\n                                    Your Playlists\n                                </h4>\n                            </div>\n                            <div className=\"div-group div-group-flush\">\n                                <PlaylistsList playlists={this.props.playlists} userID={this.props.userID} />\n                            </div>\n                        </div>\n                    </div>\n                    : null}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlists;","import React, { Component } from 'react';\nimport firebase from './Firebase';\nimport { navigate } from '@reach/router';\n\nclass CheckIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayName: '',\n      email: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    // console.log(`CheckIn handleSubmit. this.props.userID: ${this.props.userID}. this.props.playlistID: ${this.props.playlistID}`);\n\n    const ref = firebase\n      .database()\n      .ref(\n        `playlists/${this.props.userID}/${\n          this.props.playlistID\n        }/URLs`\n      );\n    ref.push({\n      URLName: this.state.displayName,\n      URLEmail: this.state.email,\n      star: false\n    });\n    navigate(\n      `/URLs/${this.props.userID}/${this.props.playlistID}`\n    );\n  }\n\n  render() {\n    // console.log(`CheckIn render. this.props.userID: ${this.props.userID}. this.props.playlistID: ${this.props.playlistID}`);\n    return (\n      <form className=\"mt-3\" onSubmit={this.handleSubmit}>\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-lg-6\">\n              <div className=\"card bg-light\">\n                <div className=\"card-body\">\n                  <h3 className=\"font-weight-light mb-3\">Check in</h3>\n                  <section className=\"form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"displayName\"\n                    >\n                      Name\n                    </label>\n                    <input\n                      required\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"displayName\"\n                      name=\"displayName\"\n                      placeholder=\"Name\"\n                      value={this.state.displayName}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <section className=\"form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"Email\"\n                    >\n                      Email\n                    </label>\n                    <input\n                      required\n                      className=\"form-control\"\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      value={this.state.email}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <div className=\"form-group text-right mb-0\">\n                    <button className=\"btn btn-primary\" type=\"submit\">\n                      Check in\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default CheckIn;","import React, { Component } from 'react';\nimport firebase from './Firebase';\nimport { GoTrashcan, GoStar, GoMail } from 'react-icons/go';\n\nclass URLsList extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            errorMessage: null\n        }\n        this.deleteURL = this.deleteURL.bind(this);\n    }\n\n    deleteURL = (e, whichPlaylist, whichURL) => {\n        e.preventDefault();\n        const adminUser = this.props.adminUser;\n        try{\n        const ref = firebase.database().ref(\n            `playlists/${adminUser}/${whichPlaylist}/URLs/${whichURL}`\n        );\n        ref.remove();\n        }\n        catch(e) {\n            this.setState({errorMessage: 'Error: failed to delete URL from URLs list.'});\n        }\n    }\n\n    toggleStar = (e, star, whichPlaylist, whichURL) => {\n        e.preventDefault();\n        const adminUser = this.props.adminUser;\n        try{\n            const ref = firebase.database().ref(\n            `playlists/${adminUser}/${whichPlaylist}/URLs/${whichURL}/star`\n            );\n            if(ref === undefined){\n                ref.set(true);\n            } else {\n                ref.set(!star);\n            }\n        }\n        catch(e) {\n            this.setState({errorMessage: 'Error: failed to set star status for URL in URLs list.'});\n        }\n    }\n\n  render() {\n    const admin = ((this.props.adminUser === this.props.userID) ? true : false);\n    const URLs = this.props.URLs;\n    \n    const myURLs = URLs.map((item) => {\n        return(\n            <div key={item.URLID}\n                className=\"col-8 col-sm-6 col-md-4 col-lg-3 mb-2 p-0 px-1\">\n                <div className=\"card \">\n                    <div className={\n                        `card-body px-3 py-2 d-flex align-items-center ` +\n                        (admin ? '' : 'justify-content-center')\n                    }>\n                        {admin && (\n                            <div className=\"btn-group pr-2\">\n                            <button\n                                className=\"btn btn-sm btn-outline-secondary\"\n                                title=\"Delete URL\"\n                                onClick={e =>\n                                this.deleteURL(\n                                    e,\n                                    this.props.playlistID,\n                                    item.URLID\n                                )\n                                }\n                            >\n                                <GoTrashcan />\n                            </button>\n                            <a\n                                href={`mailto:${item.URLEmail}`}\n                                className=\"btn btn-sm btn-outline-secondary\"\n                                title=\"Mail URL\"\n                            >\n                                <GoMail />\n                            </a>\n                            <button\n                                className={\n                                  'btn btn-sm btn-outline-secondary'  +\n                                  (item.star \n                                    ?  ' btn-info'\n                                    : ''\n                                    )\n                                }\n                                title=\"Star URL\"\n                                onClick={e =>\n                                this.toggleStar(\n                                    e,\n                                    item.star,\n                                    this.props.playlistID,\n                                    item.URLID\n                                )\n                                }\n                            >\n                                <GoStar />\n                            </button>\n                            </div>\n                        )}\n                        <div>{item.URLName}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    });\n\n        return(\n            <div className=\"row justify-content-center\">\n                {myURLs}\n            </div>\n        );\n  } //render()\n\n} //componenet class\n\nexport default URLsList;\n","import React, {Component} from 'react';\nimport firebase from './Firebase';\nimport URLsList from './URLsList';\nimport { FaUndo, FaRandom } from 'react-icons/fa';\n\nclass URLs extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        searchQuery: '',\n        allURLs: [],\n        displayURLs: [],\n        playlistName: ''\n      };\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.resetQuery = this.resetQuery.bind(this);\n      this.chooseRandom = this.chooseRandom.bind(this);\n    }\n  \n    componentDidMount(){\n        //Let's get the playlist name for the heading\n        const ref2 = firebase.database().ref(`playlists/${this.props.userID}/${this.props.playlistID}`);\n        ref2.on('value', snapshot => {\n            let playlistName = snapshot.val().playlistName;\n            this.setState({\n                playlistName: playlistName\n            });\n        });\n\n        //gets URLs from Firebase and \n        //sets this.state.displayURLs\n        const ref = firebase.database().ref(\n            `playlists/${this.props.userID}/${this.props.playlistID}/URLs`\n        );\n\n        ref.on('value', snapshot => {\n            let URLs = snapshot.val();\n            let URLsList = [];\n            //convert Object to Array\n            for (let item in URLs){\n                URLsList.push({\n                    URLID: item,\n                    URLName: URLs[item].URLName,\n                    URLEmail: URLs[item].URLEmail,\n                    star: URLs[item].star\n                });\n            }\n            this.setState({\n                displayURLs: URLsList,\n                allURLs: URLsList\n            });\n        });\n    }\n\n    handleChange(e) {\n        const itemName = e.target.name;\n        const itemValue = e.target.value;\n    \n        this.setState({ [itemName]: itemValue });\n      }    \n\n      chooseRandom(){\n        const randomURLIndex = Math.floor(\n          Math.random() * this.state.allURLs.length\n        );\n        if(randomURLIndex !== undefined){\n            this.resetQuery();\n            this.setState({\n              displayURLs: [this.state.allURLs[randomURLIndex]]\n            });\n        }\n      }\n    \n      resetQuery() {\n        this.setState({\n          displayURLs: this.state.allURLs,\n          searchQuery: ''\n        });\n      }\n        \n    render() {\n        const dataFilter = item =>\n          item.URLName\n            .toLowerCase()\n            .match(this.state.searchQuery.toLowerCase()) && true;\n        const filteredURLs = this.state.displayURLs.filter(\n          dataFilter\n        );\n    \n        return(\n            <div className=\"container mt-4\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-8\">\n                        <h4 className=\"text-center font-weight-bolder\">\n                            {this.state.playlistName} URLs\n                        </h4>\n                        <div className=\"card bg-light mb-4\">\n                            <div className=\"card-body text-center\">\n                                <div className=\"input-group input-group-lg\">\n                                    <input\n                                        type=\"text\"\n                                        name=\"searchQuery\"\n                                        value={this.state.searchQuery}\n                                        placeholder=\"Search URLs\"\n                                        className=\"form-control\"\n                                        onChange={this.handleChange}\n                                    />\n                                    <div className=\"input-group-append\">\n                                        <button\n                                        className=\"btn btn-sm btn-outline-info \"\n                                        title=\"Pick a random URL\"\n                                        onClick={() => this.chooseRandom()}\n                                        >\n                                        <FaRandom />\n                                        </button>\n                                        <button\n                                        className=\"btn btn-sm btn-outline-info \"\n                                        title=\"Reset Search\"\n                                        onClick={() => this.resetQuery()}\n                                        >\n                                        <FaUndo />\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <URLsList\n                userID={this.props.userID}\n                playlistID={this.props.playlistID}\n                adminUser={this.props.adminUser}\n                URLs={filteredURLs}\n                />\n            </div>\n        );\n    }\n}\n\nexport default URLs;","// Import React\nimport React, { Component } from 'react';\nimport { Router, navigate } from '@reach/router';\nimport firebase from './Firebase';\n\nimport Home from './Home';\nimport Welcome from './Welcome';\nimport Navigation from './Navigation';\nimport Login from './Login';\nimport Register from './Register';\nimport Playlists from './Playlists';\nimport CheckIn from './CheckIn';\nimport URLs from './URLs';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null, \n      displayName : null,\n      userID: null\n    };\n  }\n\n  registerUser = (userName) => {\n    firebase.auth().onAuthStateChanged(FBUser => {\n      FBUser.updateProfile({\n        displayName: userName\n      }).then(()=>{\n        this.setState({\n          user: FBUser,\n          displayName: FBUser.displayName,\n          userID: FBUser.uid\n        });\n        navigate('/playlists');\n      });\n    });\n  };\n\n  logOutUser = (e) => {\n    e.preventDefault();\n    this.setState({\n      user: null,\n      displayName: null,\n      userID: null,\n      playlists: []\n    });\n    firebase.auth().signOut().then(()=>{\n      navigate('/login');\n    });\n  };\n\n  addPlaylist = playlistName => {\n    const ref = firebase\n      .database()\n      .ref(`playlists/${this.state.user.uid}`);\n    ref.push({ playlistName: playlistName });\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(FBUser => {\n      if (FBUser) {\n        this.setState({\n          user: FBUser,\n          displayName: FBUser.displayName,\n          userID: FBUser.uid\n        });\n\n        const playlistsRef = firebase\n          .database()\n          .ref('playlists/' + FBUser.uid);\n\n        playlistsRef.on('value', snapshot => {\n          let playlists = snapshot.val();\n          let playlistsList = []; //Helper Array\n\n          for (let item in playlists) {\n            playlistsList.push({\n              playlistID: item,\n              playlistName: playlists[item].playlistName\n            });\n          }\n\n          this.setState({\n            playlists: playlistsList,\n            howManyPlaylists: playlistsList.length\n          });\n        });\n      } else {\n        this.setState({ user: null });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navigation user={this.state.user} logOutUser={this.logOutUser} />\n        {this.state.user && <Welcome userName={this.state.displayName}  logOutUser={this.logOutUser} />}\n\n        <Router>\n          <Home path=\"/\" user={this.state.user} />\n          <Login path=\"/login\" />\n          <Playlists\n            path=\"/playlists\"\n            playlists={this.state.playlists}\n            addPlaylist={this.addPlaylist}\n            userID={this.state.userID}\n          />\n          <URLs\n            path=\"/URLs/:userID/:playlistID\"\n            adminUser={this.state.userID}\n            userID={this.state.userID}\n          />\n          <CheckIn \n            path=\"/checkin/:userId/:playlistID\" \n            userID={this.state.userID}\n            />\n          <Register path=\"/register\" registerUser={this.registerUser} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}